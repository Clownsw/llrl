(import "~/context" _)
(import "~/type" _)
(import "~/data-layout" _)
(println! "llvm1/tests/data-layout")

(with-data-layout "e-m:e-i64:64-f80:128-n8:16:32:64-S128" (lambda (dl)
  (assert-eq? "e-m:e-i64:64-f80:128-n8:16:32:64-S128" (data-layout/string-rep dl))
  (assert-eq? byte-ordering/little-endian (data-layout/byte-order dl))
  (assert-eq? 8 (data-layout/pointer-size none dl))
  (assert-eq? 8 (data-layout/pointer-size (some 4) dl))
  (with-context (lambda (ctx)
    (let1 ty (type/build ctx (: i32 i16 i8))
      (assert-eq? 64 (data-layout/type-size-in-bits dl ty))
      (assert-eq? 8 (data-layout/type-store-size dl ty))
      (assert-eq? 8 (data-layout/type-alloc-size dl ty))
      (assert-eq? 4 (data-layout/abi-type-alignment dl ty))
      (assert-eq? 0 (data-layout/element-containing-offset dl ty 0))
      (assert-eq? 0 (data-layout/element-containing-offset dl ty 1))
      (assert-eq? 1 (data-layout/element-containing-offset dl ty 4))
      (assert-eq? 4 (data-layout/element-offset dl ty 1))
      (assert-eq? 6 (data-layout/element-offset dl ty 2)))))))
