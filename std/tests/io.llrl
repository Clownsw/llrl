(import "std/io" _ [:_ path-component:_])
(import "std/char" char/utf-8-length)

(assert-eq? "" (path/base-name ""))
(assert-eq? "/" (path/base-name "/"))
(assert-eq? "hello" (path/base-name "hello"))
(assert-eq? "hello.txt" (path/base-name "hello.txt"))
(assert-eq? "world.txt" (path/base-name "hello/world.txt"))
(assert-eq? "world" (path/base-name "hello/world/"))
(assert-eq? "." (path/base-name "hello/world/."))
(assert-eq? "c" (path/base-name "/a/b/c"))
(assert-eq? "d" (path/base-name "/a/b/c/d/"))
(assert-eq? "/" (path/base-name "//"))
(assert-eq? "bar" (path/base-name "foo/bar//"))

(assert-eq? "." (path/dir-name ""))
(assert-eq? "." (path/dir-name "foo"))
(assert-eq? "/" (path/dir-name "/"))
(assert-eq? "/" (path/dir-name "/foo"))
(assert-eq? "foo" (path/dir-name "foo/bar"))
(assert-eq? "." (path/dir-name "./bar"))
(assert-eq? "foo/bar" (path/dir-name "foo/bar/baz"))
(assert-eq? "/foo" (path/dir-name "/foo/bar"))
(assert-eq? "/foo/bar" (path/dir-name "/foo/bar/baz"))
(assert-eq? "." (path/dir-name "foo/"))
(assert-eq? "foo" (path/dir-name "foo/bar/"))
(assert-eq? "foo/bar" (path/dir-name "foo/bar/baz/"))
(assert-eq? "foo" (path/dir-name "foo/bar//"))
(assert-eq? "/" (path/dir-name "//"))

(assert-eq? none (path/extension? "foo"))
(assert-eq? (some "bar") (path/extension? "foo.bar"))
(assert-eq? (some "baz") (path/extension? "foo.bar.baz"))
(assert-eq? none (path/extension? ".gitignore"))
(assert-eq? (some "") (path/extension? "foo."))
(assert-eq? (some "bar") (path/extension? ".foo.bar"))

(assert (not (path/absolute? "")))
(assert (path/absolute? "/"))
(assert (path/absolute? "/foo"))
(assert (path/absolute? "/foo/bar"))
(assert (not (path/absolute? "./foo/bar")))
(assert (not (path/absolute? ".")))
(assert (not (path/absolute? "foo")))
(assert (not (path/absolute? "foo/bar")))

(assert (path/relative? ""))
(assert (not (path/relative? "/")))
(assert (not (path/relative? "/foo")))
(assert (not (path/relative? "/foo/bar")))
(assert (path/relative? "./foo/bar"))
(assert (path/relative? "."))
(assert (path/relative? "foo"))
(assert (path/relative? "foo/bar"))

(assert-eq? "foo" (path/with-extension none "foo"))
(assert-eq? "foo/bar" (path/with-extension none "foo/bar"))
(assert-eq? "foo/bar" (path/with-extension none "foo/bar.baz"))
(assert-eq? "foo/bar/" (path/with-extension none "foo/bar/"))
(assert-eq? "foo/bar/" (path/with-extension none "foo/bar.baz/"))
(assert-eq? "/foo/bar/" (path/with-extension none "/foo/bar/"))
(assert-eq? "/foo/bar/" (path/with-extension none "/foo/bar.baz/"))
(assert-eq? "a.b" (path/with-extension none "a.b.c"))
(assert-eq? "a.b" (path/with-extension none "a.b.c"))
(assert-eq? "foo/.gitignore" (path/with-extension none "foo/.gitignore"))
(assert-eq? "foo/.git/" (path/with-extension none "foo/.git/"))

(assert-eq? "foo.f" (path/with-extension (some "f") "foo"))
(assert-eq? "foo/bar.f" (path/with-extension (some "f") "foo/bar"))
(assert-eq? "foo/bar.f" (path/with-extension (some "f") "foo/bar.baz"))
(assert-eq? "foo/bar.f/" (path/with-extension (some "f") "foo/bar/"))
(assert-eq? "foo/bar.f/" (path/with-extension (some "f") "foo/bar.baz/"))
(assert-eq? "/foo/bar.f/" (path/with-extension (some "f") "/foo/bar/"))
(assert-eq? "/foo/bar.f/" (path/with-extension (some "f") "/foo/bar.baz/"))
(assert-eq? "a.b.f" (path/with-extension (some "f") "a.b.c"))
(assert-eq? "a.b.f" (path/with-extension (some "f") "a.b.c"))
(assert-eq? "foo/.gitignore.f" (path/with-extension (some "f") "foo/.gitignore"))
(assert-eq? "foo/.git.f/" (path/with-extension (some "f") "foo/.git/"))

(assert-eq? "foo.f" (path/default-extension "f" "foo"))
(assert-eq? "foo/bar.f" (path/default-extension "f" "foo/bar"))
(assert-eq? "foo/bar.baz" (path/default-extension "f" "foo/bar.baz"))
(assert-eq? "foo/bar.f/" (path/default-extension "f" "foo/bar/"))
(assert-eq? "foo/bar.baz/" (path/default-extension "f" "foo/bar.baz/"))
(assert-eq? "/foo/bar.f/" (path/default-extension "f" "/foo/bar/"))
(assert-eq? "/foo/bar.baz/" (path/default-extension "f" "/foo/bar.baz/"))
(assert-eq? "a.b.c" (path/default-extension "f" "a.b.c"))
(assert-eq? "a.b.c" (path/default-extension "f" "a.b.c"))
(assert-eq? "foo/.gitignore.f" (path/default-extension "f" "foo/.gitignore"))
(assert-eq? "foo/.git.f/" (path/default-extension "f" "foo/.git/"))

(assert-eq? (array) (collect (path/components "")))
(assert-eq? (array :root-dir) (collect (path/components "/")))
(assert-eq? (array (:normal "foo")) (collect (path/components "foo")))
(assert-eq? (array (:normal "foo") (:normal "bar")) (collect (path/components "foo/bar")))
(assert-eq? (array (:normal "foo") (:normal "bar") (:normal "baz.txt")) (collect (path/components "foo/bar/baz.txt")))
(assert-eq? (array :root-dir (:normal "foo")) (collect (path/components "/foo")))
(assert-eq? (array :root-dir (:normal "foo") (:normal "bar")) (collect (path/components "/foo//bar/")))
(assert-eq? (array (:normal "foo") :current-dir (:normal "bar") :parent-dir (:normal "baz")) (collect (path/components "foo//./bar/../baz///")))
(assert-eq? (array :parent-dir :parent-dir) (collect (path/components "../..")))
(assert-eq? (array :current-dir) (collect (path/components ".")))
(assert-eq? (array (:normal "foo") :current-dir) (collect (path/components "foo/.")))

(assert-eq? "foo" (path "foo"))
(assert-eq? "foo/bar" (path "foo" "bar"))
(assert-eq? "foo/bar/baz.txt" (path "foo" "bar" "baz.txt"))
(assert-eq? "foo/bar" (path "foo/" "bar"))
(assert-eq? "/bar" (path "foo/" "/bar"))
(assert-eq? "/foo/bar.txt" (path "/foo" "bar.txt"))
(assert-eq? "/bar.txt" (path "/" "bar.txt"))
(assert-eq? "./bar.txt" (path "." "bar.txt"))
(assert-eq? "../bar.txt" (path ".." "bar.txt"))
(assert-eq? "../foo/bar.txt" (path "../" "foo" "bar.txt"))

(assert-eq? "/foo" (canonicalized-path "/" "foo"))
(assert-eq? "/foo" (canonicalized-path "/" "foo/"))
(assert-eq? "/foo/bar" (canonicalized-path "/" "foo" "bar"))
(assert-eq? "/foo/bar/baz.txt" (canonicalized-path "/" "foo" "bar" "baz.txt"))
(assert-eq? "/foo/bar" (canonicalized-path "/" "foo/" "bar"))
(assert-eq? "/bar" (canonicalized-path "/" "foo/" "/bar"))
(assert-eq? "/foo/bar.txt" (canonicalized-path "/" "/foo" "bar.txt"))
(assert-eq? "/bar.txt" (canonicalized-path "/" "." "bar.txt"))
(assert-eq? "/bar.txt" (canonicalized-path "/" "foo" ".." "bar.txt"))
(assert-eq? "/foo/baz/bar.txt" (canonicalized-path "/" "foo" "bar" "../" "baz" "bar.txt"))
(assert-eq? "/foo/baz/hello/world/.git" (canonicalized-path "/foo/bar//../baz/" "hello/./world/.git/"))
