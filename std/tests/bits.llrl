(import "std/bits" _)
(println! "std/tests/bits")

(assert-eq? (bw<< 1 0) 1)
(assert-eq? (bw<< 1 1) 2)
(assert-eq? (bw<< 1 2) 4)
(assert-eq? (bw<< 1 3) 8)

(assert-eq? (bw>> 4 0) 4)
(assert-eq? (bw>> 4 1) 2)
(assert-eq? (bw>> 4 2) 1)
(assert-eq? (bw>> 4 3) 0)
(assert-eq? (bw>> -4 0) -4)
(assert-eq? (bw>> -4 1) -2)
(assert-eq? (bw>> -4 2) -1)

(assert-eq? (bw>> 4 {U8} 0) 4)
(assert-eq? (bw>> 4 {U8} 1) 2)
(assert-eq? (bw>> 4 {U8} 2) 1)
(assert-eq? (bw>> 4 {U8} 3) 0)
(assert-eq? (bw>> 255 {U8} 1) 127)
(assert-eq? (bw>> 255 {U8} 2) 63)

(assert-eq? (bw& 5 3) 1)
(assert-eq? (bw& 7 3) 3)
(assert-eq? (bw& 6 3) 2)

(assert-eq? (bw| 1 2) 3)
(assert-eq? (bw| 1 4) 5)
(assert-eq? (bw| 2 4) 6)

(assert-eq? (bw^ 1 -1) -2)
(assert-eq? (bw^ 10 -10) -4)

(assert-eq? (bw! 1) -2)
(assert-eq? (bw! -4) 3)

(assert-eq? (popcount 0 {U8}) 0)
(assert-eq? (popcount 3 {U16}) 2)
(assert-eq? (popcount 31 {I32}) 5)
(assert-eq? (popcount -1 {I64}) 64)

(assert-eq? (bits) 0)
(assert-eq? (bits [1 1]) 1) ; 1
(assert-eq? (bits [3 1]) 1) ; 1
(assert-eq? (bits [1 1] [1 1]) 3) ; 1 1
(assert-eq? (bits [1 1] [1 2]) 5) ; 1 01
(assert-eq? (bits [2 2] [1 2]) 9) ; 10 01
(assert-eq? (bits [2 4] [3 4] [10 4]) 570) ; 10 0011 1010
(assert-eq? (bits [2 4] [19 4] [10 4]) 570) ; 10 0011 1010
