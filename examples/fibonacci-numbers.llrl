(function (fibr x)
  (if (< x 3)
    1
    (+ (fibr (- x 1))
       (fibr (- x 2)))))

(function (fibi x)
  (let ([a (ref 0)]
        [b (ref 1)]
        [i (ref 1)])
    (while (< ~i x)
      (let ([c (+ ~a ~b)])
        (set! a ~b)
        (set! b c)
        (set! i (+ ~i 1))))
    ~b))

(println! (fibr 20))
(println! (fibi 20))
