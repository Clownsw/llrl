(import "std/io" with-file! path)
(import "~/tests/binutils" readelf! with-tempdir!)
(import "~/elf" _)
(import "~/asm" _)
(println! "xten1/tests/elf")

(function (test-object)
  (let* ([w (writer/new)]
         [hello-text (writer/get-label! "hello_text" w)]
         [puts-hello (writer/get-label! "puts_hello" w)]
         [puts (writer/get-label! "puts" w)]
         [r (writer/rodata w)])

    (.define! r hello-text #f)
    (write-bytes! (string/unsafe-array "HELLO") r)!
    (write-u8! 0 r)!

    (.define! w puts-hello #t)
    (subq! w rsp 8 {I8})!
    (leaq! w rdi hello-text)!
    (callq! w (address-table: puts))!
    (addq! w rsp 8 {I8})!
    (retq! w)!

    (writer/produce w)))

(function (create-test-elf-object! path)
  (with-file! path "w" (lambda (f)
    (let* ([obj (result/force (test-object))]
           [obj (elf/relocatable-object-from "elf.o" obj)])
      (elf/write! f obj)))))

(function (output-lines input) {(-> String (Array String))}
  (|> input
      (string/remove-start " ") (string/remove-end " ")
      string/split-lines
      (it/map [^1 (|> %1 (string/remove-start " ") (string/remove-end " "))])
      (it/filter [^1 (not (string/empty? %1))])
      collect))

(with-tempdir! (lambda (dir)
  (result/unwrap*
    [^1 (assert #f (string "create-test-elf-object!: " %1))]
    (create-test-elf-object! (path dir "elf.o")))

  (assert-eq? (output-lines (readelf! (array "-h" (path dir "elf.o")))) (output-lines HEADER))
  (assert-eq? (output-lines (readelf! (array "-S" (path dir "elf.o")))) (output-lines SECTIONS))
  (assert-eq? (output-lines (readelf! (array "-s" (path dir "elf.o")))) (output-lines SYMBOLS))
  (assert-eq? (output-lines (readelf! (array "-r" (path dir "elf.o")))) (output-lines RELOCS))))

(function HEADER "
ELF Header:
  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00
  Class:                             ELF64
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              REL (Relocatable file)
  Machine:                           Advanced Micro Devices X86-64
  Version:                           0x1
  Entry point address:               0x0
  Start of program headers:          0 (bytes into file)
  Start of section headers:          480 (bytes into file)
  Flags:                             0x0
  Size of this header:               64 (bytes)
  Size of program headers:           0 (bytes)
  Number of program headers:         0
  Size of section headers:           64 (bytes)
  Number of section headers:         11
  Section header string table index: 10
")

(function SECTIONS "
There are 11 section headers, starting at offset 0x1e0:

Section Headers:
  [Nr] Name              Type             Address           Offset
       Size              EntSize          Flags  Link  Info  Align
  [ 0]                   NULL             0000000000000000  00000040
       0000000000000000  0000000000000000           0     0     0
  [ 1] .text             PROGBITS         0000000000000000  00000040
       0000000000000016  0000000000000000  AX       0     0     16
  [ 2] .data             PROGBITS         0000000000000000  00000056
       0000000000000000  0000000000000000  WA       0     0     16
  [ 3] .rodata           PROGBITS         0000000000000000  00000056
       0000000000000006  0000000000000000   A       0     0     16
  [ 4] .bss              NOBITS           0000000000000000  0000005c
       0000000000000000  0000000000000000  WA       0     0     16
  [ 5] .strtab           STRTAB           0000000000000000  0000005c
       0000000000000022  0000000000000000           0     0     1
  [ 6] .symtab           SYMTAB           0000000000000000  0000007e
       00000000000000d8  0000000000000018           5     7     8
  [ 7] .rela.text        RELA             0000000000000000  00000156
       0000000000000030  0000000000000018   I       6     1     8
  [ 8] .rela.data        RELA             0000000000000000  00000186
       0000000000000000  0000000000000018   I       6     2     8
  [ 9] .rela.rodata      RELA             0000000000000000  00000186
       0000000000000000  0000000000000018   I       6     3     8
  [10] .shstrtab         STRTAB           0000000000000000  00000186
       0000000000000057  0000000000000000           0     0     1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  D (mbind), l (large), p (processor specific)
")

(function SYMBOLS "
Symbol table '.symtab' contains 9 entries:
   Num:    Value          Size Type    Bind   Vis      Ndx Name
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND
     1: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS elf.o
     2: 0000000000000000     0 SECTION LOCAL  DEFAULT    1 .text
     3: 0000000000000000     0 SECTION LOCAL  DEFAULT    2 .data
     4: 0000000000000000     0 SECTION LOCAL  DEFAULT    3 .rodata
     5: 0000000000000000     0 SECTION LOCAL  DEFAULT    4 .bss
     6: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT    3 hello_text
     7: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND puts
     8: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT    1 puts_hello
")

(function RELOCS "
Relocation section '.rela.text' at offset 0x156 contains 2 entries:
  Offset          Info           Type           Sym. Value    Sym. Name + Addend
000000000007  000600000002 R_X86_64_PC32     0000000000000000 hello_text - 4
00000000000d  000700000009 R_X86_64_GOTPCREL 0000000000000000 puts - 4
")
